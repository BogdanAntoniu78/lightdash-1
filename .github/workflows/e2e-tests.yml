name: End-to-end tests
on: [ deployment_status ]
env:
  PROJECT_DIR: "./examples/full-jaffle-shop-demo/dbt"
  PROFILES_DIR: "./examples/full-jaffle-shop-demo/profiles"
jobs:
  cypress-run:
    # Only trigger for correct environment and status
    if: ${{ github.event.deployment_status.state == 'success' && contains(github.event.deployment.environment, '- lightdash PR ')}}
    runs-on: ubuntu-latest
    #container: cypress/browsers:node16.17.0-chrome106
    steps:
      - name: Get PR number
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '[0-9]+$'
          regex_flags: 'gm'
          search_string: ${{github.event.deployment.environment}}
      - name: Get deployment url
        id: deployment_url
        env:
          DEPLOYMENT_URL: 'https://lightdash-pr-${{steps.regex.outputs.first_match}}.onrender.com'
        run:
          echo "::set-output name=url::$DEPLOYMENT_URL"
      - name: Checkout repository and submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive  # Download DBT submodule
      - uses: actions/setup-python@v1
        with:
          python-version: '3.7.x'
      - run: pip install dbt-postgres

      ## DBT run
      - name: Run DBT
        run: dbt run --profiles-dir $PROFILES_DIR --project-dir $PROJECT_DIR

      #- name: Run DBT
      #  uses: mwhitaker/dbt-action@master
      #  with:
      #    dbt_command: "dbt run --profiles-dir examples/full-jaffle-shop-demo/profiles --project-dir examples/full-jaffle-shop-demo/dbt"
      #  env:
      #    PGPORT: 5432
      #    PGUSER: postgres
      #    PGDATABASE: postgres
      #    PGHOST: ${{secrets.PGHOST}}
      #    PGPASSWORD: ${{secrets.PGPASSWORD}}
      #- name: Install ODBC drivers
      #  run: apt-get install -y unixodbc unixodbc-dev
      # Install and build lightdash packages
      - name: Install packages/common modules
        run: yarn workspace @lightdash/common install
      - name: Build packages/common module
        run: yarn common-build
      - name: Build packages/warehouses module
        run: yarn warehouses-build
      - name: Build and install packages/cli module
        run: cd packages/cli && yarn build && npm i -g 
      - name: Check latest lightdash version
        run: lightdash --version
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "credentials.json"
          json: ${{ secrets.GCP_CREDENTIALS }}
          dir: "./packages/e2e/cypress/fixtures/"
      - name: ls submodule 
        run: ls examples/full-jaffle-shop-demo/dbt
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          project: ./packages/e2e
          # Set the PR deployment url
          config: 'baseUrl=${{steps.deployment_url.outputs.url}}'
        env:
          CYPRESS_PGHOST: ${{secrets.PGHOST}}
          CYPRESS_PGPASSWORD: ${{secrets.PGPASSWORD}}
          CYPRESS_DATABRICKS_HOST: ${{secrets.DATABRICKS_HOST}}
          CYPRESS_DATABRICKS_PATH: ${{secrets.DATABRICKS_PATH}}
          CYPRESS_DATABRICKS_TOKEN: ${{secrets.DATABRICKS_TOKEN}}
          CYPRESS_SNOWFLAKE_ACCOUNT: ${{secrets.SNOWFLAKE_ACCOUNT}}
          CYPRESS_SNOWFLAKE_USER: ${{secrets.SNOWFLAKE_USER}}
          CYPRESS_SNOWFLAKE_PASSWORD: ${{secrets.SNOWFLAKE_PASSWORD}}

      # After the test run completes
      # store videos and any screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-screenshots
          path: packages/e2e/cypress/screenshots
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: cypress-videos
          path: packages/e2e/cypress/videos
