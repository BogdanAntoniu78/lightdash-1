import { generateKeyPair } from 'crypto';
import sshpk from 'sshpk';
import { promisify } from 'util';

const openSSHFromPEM = (key: string): string => {
    const parsed = sshpk.parseKey(key);
    parsed.comment = 'Generated by Lightdash';
    return parsed.toString('ssh');
};

export const generateOpenSSHKeyPair = async () => {
    const generate = promisify(generateKeyPair);
    const { publicKey, privateKey } = await generate('rsa', {
        modulusLength: 4096,
        publicKeyEncoding: {
            type: 'spki',
            format: 'pem',
        },
        privateKeyEncoding: {
            type: 'pkcs1',
            format: 'pem',
        },
    });
    return {
        publicKey: openSSHFromPEM(publicKey),
        privateKey,
    };
};
